{{- /*
  Loop over all enabled services and create a Deployment for each
*/ -}}
{{- range $name, $svc := .Values.services }}
{{- if and $svc.enabled $svc.image $svc.port }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      annotations:
        checksum/image: {{ $svc.image | quote }}
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      containers:
        - name: {{ $name }}
          image: {{ $svc.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ $svc.port }}
          {{- if $svc.env }}
          env:
            {{- range $key, $value := $svc.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          {{- end }}
          {{- if eq $name "kafka" }}
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
          {{- end }}
      {{- if eq $name "kafka" }}
      volumes:
        - name: kafka-data
          emptyDir: {}
      {{- end }}
{{- end }}
{{- end }}
