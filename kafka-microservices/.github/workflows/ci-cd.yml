name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4.4
        ports: [27017:27017]
      kafka:
        image: wurstmeister/kafka:2.13-2.8.0
        ports: [9092:9092]
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --link zookeeper
      zookeeper:
        image: wurstmeister/zookeeper:3.4.6
        ports: [2181:2181]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies (backend)
        run: |
          cd Nodejs_App
          npm ci
      - name: Install dependencies (producer)
        run: |
          cd Nodejs_App/producer-service
          npm ci
      - name: Install dependencies (consumer)
        run: |
          cd Nodejs_App/consumer-service
          npm ci
      - name: Run backend tests
        run: |
          cd Nodejs_App
          npm test || true
      - name: Run producer tests
        run: |
          cd Nodejs_App/producer-service
          npm test || true
      - name: Run consumer tests
        run: |
          cd Nodejs_App/consumer-service
          npm test || true

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/data-stream-backend:latest -f Nodejs_App/Dockerfile Nodejs_App
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/data-stream-backend:latest
      - name: Build and push producer image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/producer-service:latest -f Nodejs_App/producer-service/Dockerfile Nodejs_App/producer-service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/producer-service:latest
      - name: Build and push consumer image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/consumer-service:latest -f Nodejs_App/consumer-service/Dockerfile Nodejs_App/consumer-service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/consumer-service:latest
      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest -f Nodejs_App/frontend.Dockerfile Nodejs_App
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
